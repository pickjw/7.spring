9.Mybatis로 구현한 게시판의 글쓰기,글상세보기,글수정,글삭제,검색하기
  =>어노테이션을 추가
====================================================================
1.글쓰기 구현
--------------

1)BoardDAO 인터페이스->공통 추상 메서드 선언
2)SqlMapBoardDAO 클래스->메서드 작성(구현)->write()
3)Board.xml-><insert>,<update>,<delete>,<select>
4)각각의 ActionController가 필요(작성->편집)
-------------------------------------------------------------

Board.xml에서 작업

**기본적인 속성**

1.id(필수)->sql문장에 종류와 상관없이 필수로 작성(구분인자값)
              ->관례(메서드명)->list()

2.parameterType(선택)->SQL구문중에서 매개변수를 입력을 받아서
                        처리해주는 경우의 SQL구문에 필요
                                  ->where조건식
                                  ->입력을 받는 자료형을 쓰게 되어있다.
                      parameterType="java.lang.String" or"String"->string
                                   "java.lang.Integer" or "int"             

 select * from springboard where num=#{매개변수명}  ?대신에
 insert into springboard values(#{매개변수},,,,)

3.resultType(선택)->sql구문을 사용해서 반환값이 있는 경우
 대부분->select num from springboard (insert,update,delete  X)

  resultType="java.lang.Integer" or "int"

  select num,title from springboard

  resultType="lee.BoardCommand"=>필드한개이상은 DTO 사용한다.

  select * from springboard
  resultType="lee.BoardCommand"
  
####
###
####에러~ board.xml =>에러발생(대부분 오타)
----------------------------------------------------------------
1.Board.xml(글쓰기)

<!--2.최대값 구하기  -->
<select id="getNewNum" resultType="int">
     select max(num) from springboard 
</select>

<!--3.글쓰기 #{매개변수명(=멤버변수명} -->
<insert id="write" parameterType="board">
     insert into springboard(num,author,title,content,writeday)
     values(#{num},#{author},#{title},#{content},sysdate)
</insert>

2.BoardDAO에 웹상에서 요청할 메서드를 선언

//2.최대값 구하기
  public int getNewNum() throws DataAccessException;
	
//3.글쓰기
public void write(BoardCommand data) throws DataAccessException;

3.SqlMapBoardDao클래스에서 메서드 구현

public int getNewNum() throws DataAccessException {
		// TODO Auto-generated method stub
		/*
		int max=(Integer)getSqlSession().selectOne("getNewNum");
		return max;*/
		return (Integer)getSqlSession().selectOne("getNewNum");
	}
	
	@Override
	public void write(BoardCommand data) throws DataAccessException {
		// TODO Auto-generated method stub
		//형식)sqlSession객체명.insert("실행시킬 id명",매개변수명)
		getSqlSession().insert("write",data);
	}

4.WriteActionController에서 소스코드를 변경하는 작업

BoardCommand data=(BoardCommand)command;
		/*
		String author=data.getAuthor();
		String content=data.getContent();
	    String title=data.getTitle();*/
	    //최대값을 구해서 num(5)+1->data.setNum(6)
	    int newNum=dao.getNewNum()+1;
	    data.setNum(newNum);
	    dao.write(data);
//-----------------------------------------------------------
2.글상세보기

BoardDAO에서 추상메서드 한꺼번에 선언

2-1)
//4-1)글조회수 증가하기->update
	public void updateReadcnt(String num) throws DataAccessException;
	
	//4-2)글상세보기
	public BoardCommand retrieve(String num) throws DataAccessException;
	
	//5.글수정하기->update
	public void update(BoardCommand data) throws DataAccessException;
	
	//6.글삭제하기
	public void delete(String num)  throws DataAccessException;
	
	//7.글검색하기(검색분야,검색어)
	//(String searchName,String searchValue)->1.HashMap를 이용 2.DTO처럼
	public List search(BoardCommand data) throws DataAccessException;

2-2) Board.xml

<!-- 4.조회수 증가(update)-->
 <update id="updateReadcnt" parameterType="String">
    update springboard set readcnt=readcnt+1 where num=#{num}
 </update>
 
<!-- 5.게시물번호를 이용한 레코드 상세보기 -->
 <select id="retrieve" parameterType="String"  resultType="board">
   select * from springboard where num=#{num}
 </select>
 
 <!-- 6.글수정하기 -->
 <update id="update" parameterType="board">
     update springboard set title=#{title}, content=#{content},
                                  author=#{author} where num=#{num}
 </update>
==============================================================
3.SqlMapBoardDao->조회수 증가하기,글상세보기,글수정

 public void updateReadcnt(String num) throws DataAccessException {
    	// TODO Auto-generated method stub
    	//형식)sqlSession객체명.update("실행시킬 sql의 id값",매개변수명)
    	getSqlSession().update("updateReadcnt",num);
    }
    //글상세보기
    @Override
    public BoardCommand retrieve(String num) throws DataAccessException {
    	// TODO Auto-generated method stub
    	//BoardCommand board=(BoardCommand)getSqlSession().selectOne("retrieve",num);
    	return (BoardCommand)getSqlSession().selectOne("retrieve",num);
    }



4.각각의 ActionController를 수정 편집
   RetrieveAction 소스변경->

                //
                //BoardDTO data=dao.retrieve(num); before
		//after
		dao.updateReadcnt(num);//readcnt=readcnt+1
		BoardCommand data=dao.retrieve(num);

5.retrieve.jsp에서 편집

<%
     //BoardDTO data=(BoardDTO)request.getAttribute("data");//${data}
     BoardCommand data=(BoardCommand)request.getAttribute("data");//${data}
     //--------------------------------------------------------------
     int num=data.getNum();
     String title=data.getTitle();
     String author=data.getAuthor();
     String content=data.getContent();
%>

->글상세보기 확인
----------------------------------------------------------
글수정하기
1.board.xml에서 

<!-- 6.글수정하기 -->
 <update id="update" parameterType="board">
     update springboard set title=#{title}, content=#{content},
                            author=#{author} where num=#{num}
 </update>
 

SqlMaPBoardDao

 update() 구현

  //글수정하기
    @Override
    public void update(BoardCommand data) throws DataAccessException {
    	// TODO Auto-generated method stub
    	getSqlSession().update("update",data);
    }

UpdateActionController에서 소스코드 변경

/* before
		String num=request.getParameter("num");//기존의 num값이 전달
		//-----------------------------------------------
		String author=data.getAuthor();
		String content=data.getContent();
	    String title=data.getTitle();
	    dao.update(num,author, title, content);//dao.write(data);
	    */
		//after
		dao.update(data);
==================================================
 index.jsp에서 확인

 ** 삭제하기 **

1.Board.xml에서 <delete>~</delete> 구현

 =><delete id="delete" parameterType="String">
    delete from springboard where num=#{num}
   </delete>

2.SqlMapBoardDao클래스에서 delete()호출

//글삭제하기
    @Override
    public void delete(String num) throws DataAccessException {
    	// TODO Auto-generated method stub
    	getSqlSession().delete("delete",num);
    }
------------------------------------------------------------------
3.DeleteActionController 수정할것이 있는지?

  변경사항이 없다->메서드의 수정이 없다.
public ModelAndView handleRequest(HttpServletRequest request, 
			         HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		System.out.println("DeleteActionController 실행됨!");
		//BoardDAO dao=new BoardDAO() (X)
		String num=request.getParameter("num");
		dao.delete(num);
-------------------------------------------------------------------
*** 글검색하기***

1.BoardDAO 인터페이스 선언

//6.글검색하기(String searchName,String searchValue)->HashMap처리 관례
public List search(BoardCommand data)throws DataAccessException;

2.Board.xml에서의 구현

<!-- 8.글검색하기 -->
 <select id="search" resultType="board" parameterType="board">
    select * from springboard where #{searchName}  like  '%#{searchValue}%'
    order  by num desc
 </select>

3.SqlMapBoardDAO 메서드 구현

//글검색하기
    @Override
    public List search(BoardCommand data) throws DataAccessException {
    	// TODO Auto-generated method stub
    	return getSqlSession().selectList("search",data);
    }

=====================================================================
4.SearchActionController 소스코드 변경

//2개의 매개변수(검색분야,검색어)
		String searchName=request.getParameter("searchName");
		String searchValue=request.getParameter("searchValue");
		//ArrayList list=dao.search(searchName,searchValue); before
		//----------------HashMap객체를 이용----------------------------------------------
		BoardCommand data=new BoardCommand();
		data.setSearchName(searchName);
		data.setSearchValue(searchValue);
		List list=dao.search(data);
		//--------------------------------------------------------------
 index.jsp

 화면상의 에러메세지

HTTP Status 500 – Internal Server Error
Type Exception Report

Message Request processing failed; nested exception is org.springframework.jdbc.InvalidResultSetAccessException:

Description The server encountered an unexpected condition that prevented it from fulfilling the request.

Exception

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.jdbc.InvalidResultSetAccessException: 
### Error querying database.  
     Cause: java.sql.SQLException: 부적합한 열 인덱스
### The error may exist in lee/Board.xml
### The error may involve board.search-Inline
### The error occurred while setting parameters
=====================================================
매개변수를 설정을 할때 에러가 유발이 발생
======================================================
### SQL: select * from springboard where ?  like  '%?%'     order  by num desc
### Cause: java.sql.SQLException: 부적합한 열 인덱스
; invalid ResultSet access for SQL []; nested exception is java.sql.SQLException: 부적합한 열 인덱스
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:659)
	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:552)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
Root Cause

org.springframework.jdbc.InvalidResultSetAccessException: 
### Error querying database.  Cause: java.sql.SQLException: 부적합한 열 인덱스
### The error may exist in lee/Board.xml
### The error may involve board.search-Inline
### The error occurred while setting parameters
### SQL: select * from springboard where ?  like  '%?%'     order  by num desc
### Cause: java.sql.SQLException: 부적합한 열 인덱스
; invalid ResultSet access for SQL []; nested exception is java.sql.SQLException: 부적합한 열 인덱스
	org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:237)


**Mybatis에서 매개변수를 받을때 주의할점 **

#{매개변수}

1.값을 입력(글쓰기,글수정)=>#{매개변수}(=멤버변수)

=>매개변수가 순수 값을 입력받는값이 아닌 필드명으로 값을 입력받거나 특수기호
     가 포함되는 값을 입력받은 경우->#{매개변수} 사용불가

** 2.매개변수 받는 위치  =>필드명 ,특수기호가 포함되는 경우
    #{매개변수}  =>${매개변수}
                   ============

<select id="search" resultType="board" parameterType="board">
    select * from springboard where #{searchName}  like  '%#{searchValue}%'
    order  by num desc
 </select>

   select * from springboard where num=#{num}
===================================================

수정후

<!-- 8.글검색하기 -->
 <select id="search" resultType="board" parameterType="board">
    select * from springboard where ${searchName}  like  '%${searchValue}%'
    order  by num desc              =====================================
 </select>

 SpringBoard(JNDI)--->SpringMyBatis(Mybatis)->SpringAnno(Mybatis+Anno+Maven)
                                              ===========================
**Tip**
 ctrl+c,ctrl+v->사용하지 말것.


<Context docBase="SpringMybatis" path="/SpringMybatis" 
 reloadable="true" source="org.eclipse.jst.jee.server:SpringAnno"/>

<Context docBase="SpringAnno" path="/SpringMybatis"
                              ======================>수정(SpringAnno)
 reloadable="true" source="org.eclipse.jst.jee.server:SpringAnno"/>

</Host>
======================================================================
 p279
      웹 프로그래밍->컨트롤러 구현

글목록보기->글상세보기,글삭제하기,글검색하기와 동일

글쓰기->글수정 하기와 동일
----------------------------------------------------

** POJO 클래스->컨트롤러역할을 하기위해서는 Controller인터페이스 받거나
                 AbstractCommandController를 상속을 받아야 한다.
           =>요청을 받아서 처리해주는 메서드를 상속받아서 작성해야 되기때문에
           =>종속(handleRequest())     handle()


 개요 =>인터페이스나 추상클래스를 상속받지 않고도 
     독립적으로 요청을 받아서 처리해주는
     클래스===>POJO 클래스===>컨트롤러 역할을 해야 한다.

@Controller->  Controller인터페이스 받거나
               AbstractCommandController를 상속을 받지않아도 컨트롤러
               역할을 해주는 기능을 가진 어노테이션
----------------------------------------------------------------------
<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />


@RequestMapping("요청명령어,옵션,,,")
메서드 위에 기술==>요청명령어가 요청했을때 메서드가 자동으로 호출이 된다.
========================================================================
@Controller
public class ListActionController {
	
	BoardDAO dao;//BoardDAO dao=new SqlMapBoardDao()

	@Autowired
	public void setDao(BoardDAO dao) {
		this.dao = dao;
		System.out.println("setDao() 호출됨(dao)->"+dao);
	}
    
	@RequestMapping("/list.do")
	public ModelAndView handleRequest(HttpServletRequest request, 
			                  HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		System.out.println("handleRequest()가 실행됨!");

======================================================================

 어노테이션 정리->+Maven 적용(2가지)=>Spring tiles(스프링 메인페이지작성)
                                         (참고)
 =>Spring tiles+SpringfileBoard(자료실->v파일 업로드,다운로드)+로그파일
                                                             (디버깅까지)
=========================================================================







